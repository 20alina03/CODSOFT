/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

/**
 *
 * @author alien
 */
import javax.swing.*;
import java.io.IOException;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import org.json.JSONException;
import org.json.JSONObject;
import weatherapp.WeatherService;

public class suntimings extends javax.swing.JFrame {

   private WeatherService weatherService;
    /**
     * Creates new form sun timings
     */
    
    public suntimings() {
        initComponents();
       weatherService = new WeatherService(CityHolder.latitude, CityHolder.longitude);
        try {
            displaySunTimings();
        } catch (IOException | JSONException e) {
            JOptionPane.showMessageDialog(this, "Error fetching sun timings: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
   private void displaySunTimings() throws IOException, JSONException {
    double latitude = CityHolder.latitude;
    double longitude = CityHolder.longitude;
    JSONObject sunTimings = weatherService.fetchdata(latitude, longitude);

    if (sunTimings.has("sys")) {
        JSONObject sys = sunTimings.getJSONObject("sys");
        long sunriseEpoch = sys.getLong("sunrise");
        long sunsetEpoch = sys.getLong("sunset");

        // Convert epoch timestamps to local time
        LocalDateTime sunriseLocalTime = LocalDateTime.ofInstant(Instant.ofEpochSecond(sunriseEpoch), ZoneId.systemDefault());
        LocalDateTime sunsetLocalTime = LocalDateTime.ofInstant(Instant.ofEpochSecond(sunsetEpoch), ZoneId.systemDefault());

        // Format the local time strings
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss");
        String sunriseTimeString = sunriseLocalTime.format(formatter);
        String sunsetTimeString = sunsetLocalTime.format(formatter);

        // Set the JLabels with the sunrise and sunset times
        sunrisetime.setText(sunriseTimeString);
        sunsettime.setText(sunsetTimeString);
    } else {
        JOptionPane.showMessageDialog(this, "Sunrise and sunset data not available.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        sunsettime = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sunrisetime = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));
        setSize(new java.awt.Dimension(800, 500));
        getContentPane().setLayout(null);

        jPanel3.setPreferredSize(new java.awt.Dimension(800, 500));
        jPanel3.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jLabel5.setText("Sun Set and Sun Rise timings");
        jPanel3.add(jLabel5);
        jLabel5.setBounds(70, 40, 649, 64);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        jLabel1.setText("Sun set Time :");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(84, 164, 260, 70);

        sunsettime.setFont(new java.awt.Font("Segoe UI", 2, 36)); // NOI18N
        jPanel3.add(sunsettime);
        sunsettime.setBounds(330, 170, 320, 64);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        jLabel3.setText("Sun Rise  Time :");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(80, 260, 266, 48);

        sunrisetime.setFont(new java.awt.Font("Segoe UI", 2, 36)); // NOI18N
        jPanel3.add(sunrisetime);
        sunrisetime.setBounds(350, 260, 330, 58);

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Back ");
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 153, 255), new java.awt.Color(255, 153, 153)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);
        jButton1.setBounds(50, 400, 60, 24);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 36)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sun.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel3.add(jLabel2);
        jLabel2.setBounds(0, 0, 810, 500);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 0, 800, 500);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         dispose();
    
    // Reopen the previous form (options form)
    options optionsForm = new options();
    optionsForm.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(suntimings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
       //</editor-fold>
       
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(() -> {
        new suntimings().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel sunrisetime;
    private javax.swing.JLabel sunsettime;
    // End of variables declaration//GEN-END:variables
}
